#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: OpenWrt-ipk

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      applications:
        description: 'build applications, eg: "luci-app-mosdns". "all" means build all'
        required: true
        default: 'luci-app-mosdns'
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 18 */3 * *

env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ipk.config
  DIY_P1_SH: ipk.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Job Info
      run: |
        apps="${{ github.event.inputs.applications }}"
        echo "::notice title=Apps::$apps"
    
    - name: 检查项目分支
      uses: actions/checkout@main


    - name: 开始编译固件
      id: compile
      run: |
        apps="${{ github.event.inputs.applications }}"
        cd openwrt
        echo -e "$(nproc) thread compile"
        make package/ipk/$apps/compile -j$(nproc)|| make package/ipk/$apps/compile -j1 || make package/ipk/$apps/compile -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "FILE_TIME=$(date "+%Y年%m月%d日-%H点")" >> $GITHUB_ENV
        echo "TAG_TIME=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin压缩目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin/packages/x86_64

    - name: 发布至release
      id: release
      uses: ncipollo/release-action@v1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: ${{ env.FILE_TIME }} 「 openwrt-IPK 」
        allowUpdates: true
        tag: ${{ env.TAG_TIME }}
        commit: main
        token: ${{ secrets.RELEASE_TOKEN }}
        body: |
          X86 IPK
        artifacts: openwrt/bin/packages/x86_64/base/*

    - name: 清理旧的workflow
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 180
        keep_minimum_runs: 10

    - name: 删除旧的Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    - name: TG推送
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=恭喜主人openwrt插件编译完成！"

